@model IEnumerable<HotelReservation.Models.Reservation>

@{
    ViewData["Title"] = "Manage Reservations";
}

<div class="container mt-4">
    <h2 class="mb-3">Manage Reservations</h2>

    <!-- 🔎 Search & Filter Controls -->
    <div class="row mb-3">
        <div class="col-md-4">
            <input type="text" id="searchInput" class="form-control" placeholder="Search by Booking Ref or Guest Name">
        </div>
        <div class="col-md-3">
            <select id="statusFilter" class="form-control">
                <option value="">All Status</option>
                <option value="Pending">Pending</option>
                <option value="Confirmed">Confirmed</option>
                <option value="Cancelled">Cancelled</option>
            </select>
        </div>
        <div class="col-md-3">
            <select id="paymentFilter" class="form-control">
                <option value="">All Payments</option>
                <option value="Paid">Paid</option>
                <option value="Unpaid">Unpaid</option>
            </select>
        </div>
    </div>

    <table class="table table-hover" id="reservationsTable">
        <thead class="table-dark">
            <tr>
                <th>Booking Ref</th>
                <th>Guest Name</th>
                <th>Check-in</th>
                <th>Check-out</th>
                <th>Status</th>
                <th>Paid</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var res in Model)
            {
                <tr class="reservation-row"
                    data-booking="@res.BookingReference"
                    data-name="@res.GuestName"
                    data-status="@res.Status.ToString()"
                    data-paid="@(res.IsPaid ? "Paid" : "Unpaid")">
                    <td>@res.BookingReference</td>
                    <td>@res.GuestName</td>
                    <td>@res.CheckInDate.ToString("MMM dd, yyyy")</td>
                    <td>@res.CheckOutDate.ToString("MMM dd, yyyy")</td>
                    <td>
                        <span class="badge @(res.Status == ReservationStatus.Pending ? "bg-success" : "bg-warning")">
                            @res.Status
                        </span>
                    </td>
                    <td>
                        @(res.IsPaid ? "Yes" : "No")
                    </td>
                    <td>
                        <a class="btn btn-info btn-sm" href="@Url.Action("Details", "ManageReservations", new { id = res.ReservationId })">Details</a>
                        <a class="btn btn-primary btn-sm" href="@Url.Action("Edit", "ManageReservations", new { id = res.ReservationId })">Edit</a>
                        <form asp-action="Delete" method="post" style="display:inline;" onsubmit="return confirmDelete(this);">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@res.ReservationId" />
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- 🔹 JavaScript for Filtering -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let searchInput = document.getElementById("searchInput");
        let statusFilter = document.getElementById("statusFilter");
        let paymentFilter = document.getElementById("paymentFilter");
        let rows = document.querySelectorAll(".reservation-row");

        function filterTable() {
            let searchText = searchInput.value.toLowerCase();
            let statusValue = statusFilter.value;
            let paymentValue = paymentFilter.value;
            rows.forEach(row => {
                let booking = row.dataset.booking ? row.dataset.booking.toLowerCase() : "";
                let name = row.dataset.name ? row.dataset.name.toLowerCase() : "";
                let status = row.dataset.status || "";
                let paid = row.dataset.paid || "";

                let matchesSearch = booking.includes(searchText) || name.includes(searchText);
                let matchesStatus = statusValue === "" || status === statusValue;
                let matchesPayment = paymentValue === "" || paid === paymentValue;

                row.style.display = (matchesSearch && matchesStatus && matchesPayment) ? "" : "none";
            });
        }

        searchInput.addEventListener("input", filterTable);
        statusFilter.addEventListener("change", filterTable);
        paymentFilter.addEventListener("change", filterTable);
    });
</script>

<script>
    function confirmDelete(form) {
        if (confirm("Are you sure you want to delete this reservation?")) {
            return true; // Proceed with form submission
        }
        return false; // Cancel the delete
    }
</script>
