@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    var frontDeskEmail = HttpContextAccessor.HttpContext?.User.Identity?.Name ?? "FrontDesk";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Front Desk</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>

    <div class="d-flex" id="wrapper">
        <!-- Sidebar -->
        <nav class="bg-dark text-white vh-100 d-flex flex-column p-3 position-fixed top-0 start-0 h-100 overflow-auto" id="sidebar">
            <h4 class="text-center">Front Desk</h4>
            <hr>
            <ul class="nav flex-column">
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="CheckIn" asp-action="Index">Check-in Guests</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="CheckOut" asp-action="Index">Check-out Guests</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="Reservations" asp-action="Index">Manage Reservations</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="GuestSearch" asp-action="Index">Guest Search</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="Housekeeping" asp-action="Index">Housekeeping Requests</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="Billing" asp-action="Index">Billing & Payments</a></li>
                <li class="nav-item"><a class="nav-link text-white" asp-area="FrontDesk" asp-controller="Reports" asp-action="Index">Reports</a></li>
            </ul>
        </nav>

        <!-- Page Content -->
        <div class="flex-grow-1" id="content" style="margin-left: 250px;">
            <!-- Top Bar -->
            <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
                <button class="btn btn-outline-primary me-3 d-lg-none" id="toggleSidebar">☰</button>
                <div class="ms-auto d-flex align-items-center">
                    <span class="me-3"><i class="fas fa-user"></i> @frontDeskEmail</span>
                    <a href="#" class="me-3"><i class="fas fa-envelope"></i> Inbox</a>
                    <a asp-area="" asp-controller="Auth" asp-action="Logout" class="text-danger"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </div>
            </nav>

            <div class="container-fluid p-3">
                @RenderBody()
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js" asp-append-version="true"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        document.getElementById("toggleSidebar").addEventListener("click", function () {
            var sidebar = document.getElementById("sidebar");
            var content = document.getElementById("content");

            if (sidebar.style.marginLeft === "-250px") {
                sidebar.style.marginLeft = "0";
                content.style.marginLeft = "250px";
            } else {
                sidebar.style.marginLeft = "-250px";
                content.style.marginLeft = "0";
            }
        });
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function showAlert(type, title, message) {
                Swal.fire({
                    icon: type,
                    title: title,
                    text: message,
                    position: "top", // ✅ Display just below the navbar
                    toast: true, // ✅ Keeps it compact
                    showConfirmButton: false,
                    timer: 3000, // Auto close in 3 seconds
                    width: "500px", // ✅ Wider but not too tall
                    padding: "12px",
                    background: getBackgroundColor(type), // ✅ Custom background colors
                    color: "#000", // ✅ Keep text readable
                    customClass: {
                        popup: "swal-custom-popup",
                        title: "swal-custom-title",
                        content: "swal-custom-text"
                    }
                });
            }

            function getBackgroundColor(type) {
                switch (type) {
                    case "success": return "#d4edda"; // ✅ Light Green
                    case "error": return "#f8d7da"; // ✅ Light Red
                    case "warning": return "#fff3cd"; // ✅ Light Yellow
                    default: return "#ffffff"; // Default
                }
            }

            // Success Alert
            var successMessage = "@TempData["Success"]";
            if (successMessage) {
                showAlert("success", "Success!", successMessage);
            }

            // Error Alert
            var errorMessage = "@TempData["Error"]";
            if (errorMessage) {
                showAlert("error", "Oops!", errorMessage);
            }

            // Warning Alert
             var warningMessage = "@TempData["Warning"]";
             if (warningMessage) {
                showAlert("warning", "Attention!", warningMessage);
             }

            // Warning Alert
            var warningMessage = "@Context.Request.Query["warning"]";
            if (warningMessage) {
                showAlert("warning", "Warning!", warningMessage);
            }
        });


    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
