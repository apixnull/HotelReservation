@{
    ViewData["Title"] = "Home Page";
}

<!-- slider Area Start-->
<div class="slider-area ">
    <!-- Mobile Menu -->
    <div class="slider-active dot-style">
        <div class="single-slider  hero-overly slider-height d-flex align-items-center" data-background="/assets/img/hero/h1_hero.jpg">
            <div class="container">
                <div class="row justify-content-center text-center">
                    <div class="col-xl-9">
                        <div class="h1-slider-caption">
                            <h1 data-animation="fadeInUp" data-delay=".4s">top hotel in the city</h1>
                            <h3 data-animation="fadeInDown" data-delay=".4s">Hotel & Resourt</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="single-slider  hero-overly slider-height d-flex align-items-center" data-background="/assets/img/hero/h1_hero.jpg">
            <div class="container">
                <div class="row justify-content-center text-center">
                    <div class="col-xl-9">
                        <div class="h1-slider-caption">
                            <h1 data-animation="fadeInUp" data-delay=".4s">top hotel in the city</h1>
                            <h3 data-animation="fadeInDown" data-delay=".4s">Hotel & Resourt</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="single-slider  hero-overly slider-height d-flex align-items-center" data-background="/assets/img/hero/h1_hero.jpg">
            <div class="container">
                <div class="row justify-content-center text-center">
                    <div class="col-xl-9">
                        <div class="h1-slider-caption">
                            <h1 data-animation="fadeInUp" data-delay=".4s">top hotel in the city</h1>
                            <h3 data-animation="fadeInDown" data-delay=".4s">Hotel & Resourt</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- slider Area End-->
<!-- Booking Room Start-->
<div class="booking-area">
    <div class="container">
        <div class="row ">
            <div class="col-12">
                <form asp-controller="Booking" asp-action="Search" method="get" onsubmit="return validateDates()">
                    <div class="booking-wrap d-flex justify-content-between align-items-center">

                        <!-- select in date -->
                        <div class="single-select-box mb-30">
                            <!-- select out date -->
                            <div class="boking-tittle">
                                <span> Check In Date:</span>
                            </div>
                            <div class="boking-datepicker">
                                <input name="CheckInDate" id="datepicker1" placeholder="mm/dd/yy" required />
                            </div>
                        </div>
                        <!-- Single Select Box -->
                        <div class="single-select-box mb-30">
                            <!-- select out date -->
                            <div class="boking-tittle">
                                <span>Check OutDate:</span>
                            </div>
                            <div class="boking-datepicker">
                                <input name="CheckOutDate" id="datepicker2"  placeholder="mm/dd/yy" required/>
                            </div>
                        </div>
                        <!-- ✅ Max Occupancy (Replaces Adults & Children) -->
                        <div class="single-select-box mb-30">
                            <div class="boking-tittle">
                                <span>Max Occupancy:</span>
                            </div>
                            <div class="select-this">
                                <div class="select-itms">
                                    <select name="MaxOccupancy" id="select1" class="form-select">
                                        <option value="1">1</option>
                                        <option value="2")">2</option>
                                        <option value="3")">3</option>
                                        <option value="4")">4</option>
                                        <option value="5")">5</option>
                                        <option value="6")">6</option>
                                    </select>
                                </div>
                            </div>
                        </div>


                        <!-- ✅ Room Category (New) -->
                        <div class="single-select-box mb-30">
                            <div class="boking-tittle">
                                <span>Room Category:</span>
                            </div>
                            <div class="select-this">
                                    <div class="select-itms">
                                        <select name="RoomType" id="select3">
                                            <option value="">Any</option>
                                            <option value="Standard">Standard</option>
                                            <option value="Deluxe">Deluxe</option>
                                            <option value="Suite">Suite</option>
                                        </select>
                                    </div>
                            </div>
                        </div>

                        <!-- ✅ Submit Button -->
                        <div class="single-select-box pt-45 mb-30">
                            <button type="submit" class="btn select-btn">Search Rooms</button>
                            <input type="hidden" name="scrollTo" value="available-rooms">
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Booking Room End-->
@await Html.PartialAsync("_fill_in")

<style>
    .swal-custom-popup {
        margin-bottom: 100px; /* Pushes it even lower */
    }
</style>

@section Scripts {
    <script>
        function validateDates() {
            const checkIn = new Date(document.getElementById("datepicker1").value);
            const checkOut = new Date(document.getElementById("datepicker2").value);

            if (isNaN(checkIn.getTime()) || isNaN(checkOut.getTime())) {
                showToast("error", "Invalid Date", "Please select valid check-in and check-out dates.");
                return false; // Prevent form submission
            }

            if (checkIn >= checkOut) {
                showToast("warning", "Invalid Dates", "Check-out date must be after check-in date.");
                return false; // Prevent form submission
            }

            return true; // Allow form submission
        }

                function showToast(type, title, message) {
            Swal.fire({
                icon: type,
                title: title,
                text: message,
                position: "top", // ✅ Shows at the bottom-left (or use "bottom" for center)
                toast: true, // ✅ Keeps it compact
                showConfirmButton: false,
                timer: 3000, // Auto close in 3 seconds
                width: "500px", // ✅ Wider but not too tall
                padding: "12px",
                background: getBackgroundColor(type), // ✅ Custom background colors
                color: "#000", // ✅ Keep text readable
                customClass: {
                    popup: "swal-custom-popup",
                    title: "swal-custom-title",
                    content: "swal-custom-text"
                }
            });

            // ✅ Ensure it stays on top
            setTimeout(() => {
                document.querySelector(".swal2-container").style.zIndex = "9999";
            }, 100); // Small delay to ensure it applies after rendering
        }

        function getBackgroundColor(type) {
            switch (type) {
                case "success": return "#d4edda"; // ✅ Light green
                case "warning": return "#fff3cd"; // ✅ Light yellow
                case "error": return "#f8d7da"; // ✅ Light red
                default: return "#ffffff"; // ✅ Default white
            }
        }
    </script>
}